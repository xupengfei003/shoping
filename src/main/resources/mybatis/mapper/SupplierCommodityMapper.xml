<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="so.sao.shop.supplier.dao.SupplierCommodityDao">

    <resultMap id="BaseResultMap" type="so.sao.shop.supplier.domain.SupplierCommodity">
        <id column="ID" property="id"/>
        <result column="SKU" property="sku"/>
        <result column="SUPPLIER_ID" property="supplierId"/>
        <result column="CODE" property="code"/>
        <result column="CODE69" property="code69"/>
        <result column="tag_id" property="tagId"/>
        <result column="measure_spec_id" property="measureSpecId"/>
        <result column="RULE_VAL" property="ruleVal"/>
        <result column="INVENTORY" property="inventory"/>
        <result column="unit_id" property="unitId"/>
        <result column="MIN_IMG" property="minImg"/>
        <result column="PRICE" property="price"/>
        <result column="UNIT_PRICE" property="unitPrice"/>
        <result column="CREATED_BY" property="createdBy"/>
        <result column="CREATED_AT" property="createdAt"/>
        <result column="UPDATED_BY" property="updatedBy"/>
        <result column="UPDATED_AT" property="updatedAt"/>
        <result column="DELETED" property="deleted"/>
        <result column="INVALID_STATUS" property="invalidStatus"/>
        <result column="STATUS" property="status"/>
        <result column="REMARK" property="remark"/>
        <result column="DESCRIPTION" property="description"/>
    </resultMap>


    <sql id="searchColumns">
        sc.id AS id,
        sc.min_img AS minImg,
        sc.sku AS sku,
        c.code69 AS code69,
        sc.code AS code,
        cb.name AS brandName,
        c.name AS commName,
        cu.name AS unitName,
        cms.name AS measureSpecName,
        sc.rule_val AS ruleVal,
        sc.inventory AS inventory,
        sc.status AS status,
        sc.invalid_status AS invalidStatus,
        sc.price AS price,
        sc.unit_price AS unitPrice,
        sc.created_at AS createdAt,
        sc.updated_at AS updatedAt,
        sc.min_order_quantity AS minOrderQuantity,
        sca.audit_result AS auditResult
    </sql>

    <sql id="audit">
          t.id,
          t.sc_id,
          t.supplier_id,
          t.updated_at,
          t.created_at,
          t.status,
          t.audit_result,
          t.audit_flag,
          t.audit_by,
          t.audit_opinion
    </sql>

    <insert id="save"  useGeneratedKeys="true" keyProperty="id">
        insert supplier_commodity (
            supplier_id,
            code,
            code69,
            inventory,
            measure_spec_id,
            rule_val,
            unit_id,
            price,
            unit_price,
            min_img,
            created_at,
            updated_at,
            created_by,
            updated_by,
            deleted,
            status,
            remark,
            tag_id,
            min_order_quantity,
            invalid_status,
            carton_id,
            carton_val,
            inventory_minimum,
            inventory_status,
            measure_spec_val,
            production_date,
            guarantee_period,
            guarantee_period_unit
        )VALUES (
            #{supplierId},
            #{code},
            #{code69},
            #{inventory},
            #{measureSpecId},
            #{ruleVal},
            #{unitId},
            #{price},
            #{unitPrice},
            #{minImg},
            #{createdAt},
            #{updatedAt},
            #{createdBy},
            #{updatedBy},
            #{deleted},
            #{status},
            #{remark},
            #{tagId},
            #{minOrderQuantity},
            #{invalidStatus},
            #{cartonId},
            #{cartonVal},
            #{inventoryMinimum},
            #{inventoryStatus},
            #{measureSpecVal},
            #{productionDate},
            #{guaranteePeriod},
            #{guaranteePeriodUnit}
        )
    </insert>


    <!-- 更新商品规格信息 -->
    <update id="update">
        UPDATE supplier_commodity SET
            code = #{code},
            rule_val = #{ruleVal},
            unit_id = #{unitId},
            price = #{price},
            unit_price = #{unitPrice},
            min_img = #{minImg},
            updated_at = #{updatedAt},
            updated_by = #{updatedBy},
            remark = #{remark},
            tag_id = #{tagId},
            measure_spec_id = #{measureSpecId},
            min_order_quantity = #{minOrderQuantity},
            carton_id = #{cartonId},
            carton_val = #{cartonVal},
            production_date = #{productionDate},
            guarantee_period =  #{guaranteePeriod},
            guarantee_period_unit =  #{guaranteePeriodUnit},
            carton_id = #{cartonId},
            carton_val = #{cartonVal},
            inventory_minimum = #{inventoryMinimum},
            inventory_status = #{inventoryStatus},
            measure_spec_val = #{measureSpecVal},
            production_date = #{productionDate},
            guarantee_period = #{guaranteePeriod},
            guarantee_period_unit = #{guaranteePeriodUnit}
        WHERE id = #{id}
    </update>
    <delete id="deleteById">
        UPDATE supplier_commodity SET deleted=#{deleted},updated_at=#{updatedAt} WHERE id=#{id}
    </delete>

    <update id="deleteByIds" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";" >
            UPDATE supplier_commodity
            <set>
                deleted = #{item.deleted},
                updated_at = #{item.updatedAt}
            </set>
            WHERE id = #{item.id}
        </foreach>
    </update>

    <select id="searchSuppliersByCode69" parameterType="java.lang.String" resultType="java.lang.Long">
        SELECT sc.supplier_Id
        FROM supplier_commodity sc WHERE sc.code69 = #{code69}
    </select>
    <!--获取商品详情-->
    <select id="findSupplierCommodityInfo" resultType="so.sao.shop.supplier.domain.SupplierCommodity">
        SELECT
        id,
        sku,
        remark,
        description,
        code,
        code69,
        rule_val AS ruleVal,
        inventory,
        min_img AS minImg,
        price,
        unit_price AS unitPrice
        FROM supplier_commodity sc
        WHERE sc.deleted = 0 AND code69 = #{code69} AND sc.supplier_id = #{supplierId}
    </select>
    <!--获取商品详情-->
    <select id="findDetail" resultType="so.sao.shop.supplier.pojo.output.CommodityOutput">
        SELECT
            sc.id AS id,
            sc.supplier_id AS supplierId,
            cb.name AS brandName,
            c.category_one_id AS categoryOneId,
            c.category_two_id AS categoryTwoId,
            c.category_three_id AS categoryThreeId,
            c.name AS name,
            sc.remark AS remark,
            sc.description AS description,
            sc.code AS code,
            sc.code69 AS code69,
            c.origin_place AS originPlace,
            c.company_name AS companyName,
            c.market_time AS marketTime,
            sc.tag_id AS tagId,
            ct.name AS tagName,
            sc.measure_spec_id AS measureSpecId,
            cms.name AS measureSpecName,
            sc.rule_val AS ruleVal,
            sc.unit_id AS unitId,
            cu.name AS unitName,
            sc.inventory AS inventory,
            sc.min_img AS minImg,
            sc.price AS price,
            sc.unit_price AS unitPrice,
            sc.created_at AS createdAt,
            sc.updated_at AS updatedAt,
            sc.supplier_id AS supplierId,
            sc.status AS status,
            sc.invalid_status AS invalidStatus,
            sc.min_order_quantity AS minOrderQuantity,
            sc.inventory_minimum AS inventoryMinimum,
            sc.inventory_status AS inventoryStatus,
            sc.production_date AS productionDate,
            sc.measure_spec_val AS measureSpecVal,
            sc.guarantee_period AS guaranteePeriod,
            sc.guarantee_period_unit AS guaranteePeriodUnit,
            sc.carton_id AS cartonId,
            sc.carton_val AS cartonVal,
            (SELECT NAME FROM comm_category cc WHERE cc.id = c.category_one_id) AS categoryOneName,
            (SELECT NAME FROM comm_category cc WHERE cc.id = c.category_two_id) AS categoryTwoName,
            (SELECT NAME FROM comm_category cc WHERE cc.id = c.category_three_id) AS categoryThreeName
        FROM
             supplier_commodity sc
            INNER JOIN (commodity c LEFT JOIN comm_brand cb ON c.brand_id = cb.id) ON sc.code69 = c.code69
             LEFT JOIN comm_measure_spec cms ON sc.measure_spec_id = cms.id
             LEFT JOIN comm_unit cu ON sc.unit_id = cu.id
             LEFT JOIN comm_tag ct ON sc.tag_id = ct.id
             WHERE  sc.id = #{id}
    </select>

    <!--获取商品信息-->
    <select id="findOne" resultType="so.sao.shop.supplier.domain.SupplierCommodity">
        SELECT
            id,
            sku,
            remark,
            description,
            code,
            code69,
            rule_val AS ruleVal,
            inventory,
            min_img AS minImg,
            price,
            unit_price AS unitPrice,
            created_at AS createdAt,
            updated_at AS updatedAt,
            supplier_id AS supplierId,
            status,
            sku,
            invalid_status AS invalidStatus,
            carton_id AS cartonId,
            carton_val AS cartonVal,
            inventory_minimum AS inventoryMinimum,
            inventory_status AS inventoryStatus,
            measure_spec_val AS measureSpecVal,
            production_date AS productionDate,
            guarantee_period AS guaranteePeriod,
            guarantee_period_unit AS guaranteePeriodUnit
        FROM supplier_commodity WHERE id = #{id} and deleted = 0
    </select>

    <!--查询商品列表（高级搜索）-->
    <select id="find" resultType="so.sao.shop.supplier.pojo.vo.SuppCommSearchVo">
        SELECT
            id AS id,
            min_img AS minImg,
            commId,
            supplierId as supplierId,
            providerName as supplierName,
            code69 AS code69,
            CODE AS CODE,
            brandName,
            commName,
            categoryOneId,
            categoryTwoId,
            categoryThreeId,
            unitName,
            measureSpecName,
            rule_val AS ruleVal,
            inventory AS inventory,
            STATUS AS statusNum,
            invalidStatus ,
            price AS price,
            unit_price AS unitPrice,
            created_at AS createdAt,
            updated_at AS updatedAt,
            min_order_quantity AS minOrderQuantity,
            audit_result AS auditResult,
            audit_opinion AS auditOpinion
        FROM (
            SELECT
                t1.sc_id AS id,
                c.id commId,
                a.provider_name providerName,
                sctmp.supplier_id supplierId,
                sctmp.min_img,
                sctmp.code69,
                sctmp.code,
                cb.name AS brandName,
                c.name AS commName,
                c.category_one_id AS categoryOneId,
                c.category_two_id AS categoryTwoId,
                c.category_three_id AS categoryThreeId,
                cu.name AS unitName,
                cms.name AS measureSpecName,
                sctmp.rule_val,
                sctmp.inventory,
                t1.status AS STATUS,
                sctmp.invalid_status AS invalidStatus,
                sctmp.price,
                sctmp.unit_price,
                sctmp.created_at,
                t1.updated_at,
                sctmp.min_order_quantity,
                t1.audit_result,
                t1.audit_opinion
            FROM
                supplier_commodity_tmp sctmp
            INNER JOIN (
            SELECT
                  <include refid="audit"/>
            FROM supplier_commodity_audit t
              WHERE t.status = 6  /**/
                AND t.audit_flag = 1) t1 ON sctmp.sca_id = t1.id
            INNER JOIN commodity c ON sctmp.code69 = c.code69
             LEFT JOIN comm_brand cb ON c.brand_id = cb.id
             LEFT JOIN comm_measure_spec cms ON sctmp.measure_spec_id = cms.id
             LEFT JOIN comm_unit cu ON sctmp.unit_id = cu.id
             LEFT JOIN account a ON a.account_id = sctmp.supplier_id
            <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(supplierId)">
                WHERE sctmp.supplier_id = #{supplierId}
            </if>

        UNION
            SELECT
                sc.id,
                c.id commId,
                a.provider_name providerName,
                sc.supplier_id supplierId,
                sc.min_img,
                c.code69,
                sc.code,
                cb.name AS brandName,
                c.name AS commName,
                c.category_one_id AS categoryOneId,
                c.category_two_id AS categoryTwoId,
                c.category_three_id AS categoryThreeId,
                cu.name AS unitName,
                cms.name AS measureSpecName,
                sc.rule_val,
                sc.inventory,
                sc.status,/**/
                sc.invalid_status AS invalidStatus,
                sc.price,
                sc.unit_price,
                sc.created_at,
                sc.updated_at,
                sc.min_order_quantity,
                t1.audit_result,
                t1.audit_opinion
            FROM
                supplier_commodity sc
            LEFT JOIN (
            SELECT
                  <include refid="audit"/>
            FROM
                  supplier_commodity_audit t
            WHERE t.audit_flag = 1 AND t.status != 6) t1 ON sc.id = t1.sc_id
            INNER JOIN commodity c ON sc.code69 = c.code69
             LEFT JOIN comm_brand cb ON c.brand_id = cb.id
             LEFT JOIN comm_measure_spec cms ON sc.measure_spec_id = cms.id
             LEFT JOIN comm_unit cu ON sc.unit_id = cu.id
             LEFT JOIN account a ON a.account_id = sc.supplier_id
            WHERE sc.deleted = 0
            <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(supplierId) ">
                AND sc.supplier_id = #{supplierId}
            </if>
            AND (t1.id IS NULL AND sc.status IN (0, 2, 3))

        UNION
            SELECT
                sc.id,
                c.id commId,
                a.provider_name providerName,
                sc.supplier_id supplierId,
                sc.min_img,
                c.code69,
                sc.code,
                cb.name AS brandName,
                c.name AS commName,
                c.category_one_id AS categoryOneId,
                c.category_two_id AS categoryTwoId,
                c.category_three_id AS categoryThreeId,
                cu.name AS unitName,
                cms.name AS measureSpecName,
                sc.rule_val,
                sc.inventory,
                t1.status,/**/
                sc.invalid_status AS invalidStatus,
                sc.price,
                sc.unit_price,
                sc.created_at,
                sc.updated_at,
                sc.min_order_quantity,
                t1.audit_result,
                t1.audit_opinion
            FROM
                supplier_commodity sc
            LEFT JOIN (
            SELECT
                <include refid="audit"/>
            FROM
                supplier_commodity_audit t
            WHERE t.audit_flag = 1 AND t.status != 6) t1 ON sc.id = t1.sc_id
            INNER JOIN commodity c ON sc.code69 = c.code69
             LEFT JOIN comm_brand cb ON c.brand_id = cb.id
             LEFT JOIN comm_measure_spec cms ON sc.measure_spec_id = cms.id
             LEFT JOIN comm_unit cu ON sc.unit_id = cu.id
             LEFT JOIN account a ON a.account_id = sc.supplier_id
            WHERE sc.deleted = 0
            <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(supplierId)">
                AND sc.supplier_id = #{supplierId}
            </if>
            AND (t1.id IS NOT NULL AND sc.status IN (0, 2, 3))
        ) t
        GROUP BY id HAVING 1 = 1





        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(supplierName) and @so.sao.shop.supplier.util.Ognl@isNotEmpty(role)">
            AND t.providerName  LIKE CONCAT ('%',#{supplierName},'%')
        </if>

        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(commCode69)">
            AND t.code69 = #{commCode69}
        </if>

        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(commBrand)">
            AND t.brandName  LIKE CONCAT ('%',#{commBrand},'%')
        </if>

        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(code)">
            AND t.code = #{code}
        </if>



        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(commName)">
            AND commName LIKE CONCAT ('%',#{commName},'%')
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(status)">
            AND t.status = #{status}
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(minPrice) and @so.sao.shop.supplier.util.Ognl@isEmpty(maxPrice)">
            AND t.price<![CDATA[ >= #{minPrice}]]>
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(maxPrice) and @so.sao.shop.supplier.util.Ognl@isEmpty(minPrice)">
            AND  t.price<![CDATA[<= #{maxPrice}]]>
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(minPrice) and @so.sao.shop.supplier.util.Ognl@isNotEmpty(maxPrice)">
            AND t.price BETWEEN #{minPrice} AND #{maxPrice}
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(typeOneId)">
            AND categoryOneId = #{typeOneId}
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(typeTwoId)">
            AND categoryTwoId = #{typeTwoId}
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(typeThreeId)">
            AND categoryThreeId = #{typeThreeId}
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(auditResult)">
            AND t.audit_result = #{auditResult}
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(beginUpdateAt) and @so.sao.shop.supplier.util.Ognl@isEmpty(endUpdateAt)">
            AND unix_timestamp(t.updated_at)<![CDATA[ >= unix_timestamp(#{beginUpdateAt})]]>
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(endUpdateAt) and @so.sao.shop.supplier.util.Ognl@isEmpty(beginUpdateAt)">
            AND unix_timestamp(t.updated_at)<![CDATA[<= unix_timestamp(#{endUpdateAt})]]>
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(beginUpdateAt) and @so.sao.shop.supplier.util.Ognl@isNotEmpty(endUpdateAt)">
            AND unix_timestamp(t.updated_at) BETWEEN unix_timestamp(#{beginUpdateAt}) AND unix_timestamp(#{endUpdateAt})
        </if>
        ORDER BY t.updated_at DESC , t.id DESC
    </select>

    <!--根据id查询个数-->
    <select id="countByCode69" resultType="int">
        select
        count(*)
        from supplier_commodity
        WHERE deleted = 0 AND code69 = #{code69} AND supplier_id = #{supplierId}
    </select>

    <!--根据id查询个数-->
    <select id="countById" resultType="int">
        select
        count(*)
        from supplier_commodity where deleted = 0 AND id = #{id}
    </select>

    <!--获取商品状态-->
    <select id="findStatus" resultType="int">
        SELECT
        status
        FROM supplier_commodity WHERE id = #{id}
    </select>

    <!--上下架商品（仅限待上架商品的下架与管理员上下架操作）-->
    <update id="onOrOffShelves">
        UPDATE supplier_commodity
        SET updated_at = #{updatedAt},status = #{status}
        WHERE id = #{id}
    </update>

    <!--批量上下架商品（仅限待上架商品的批量下架与管理员批量上下架操作操作）-->
    <update id="onOrOffShelvesBatch">
        <foreach collection="list" separator=";" open=" " close=" " item="item">
            UPDATE supplier_commodity
            <set>
                updated_at = #{item.updatedAt},
                status = #{item.status}
            </set>
            WHERE id = #{item.id}
        </foreach>
    </update>

    <!--根据商品标签ID查询是否有正在使用（存在性校验使用）-->
    <select id="countSupplierCommodityByTagId" parameterType="java.lang.Long" resultType="int">
        select
        COUNT(id) as num
        from supplier_commodity sc
        WHERE sc.deleted = 0 and sc.tag_id=#{tagId}
    </select>

    <!--根据箱规单位ID查询是否有正在使用（存在性校验使用）-->
    <select id="countSupplierCommodityByCartonId" parameterType="java.lang.Long" resultType="int">
        select
        COUNT(id) as num
        from supplier_commodity sc
        WHERE sc.deleted = 0 and sc.carton_id=#{cartonId}
    </select>

    <!--查询商品列表（简易查询）-->
    <select id="findSimple" resultType="so.sao.shop.supplier.pojo.vo.SuppCommSearchVo">
        SELECT
            id AS id,
            min_img AS minImg,
            commId,
            supplier_id as supplierId,
            providerName as supplierName,
            code69 AS code69,
            CODE AS CODE,
            brandName,
            commName,
            categoryOneId,
            unitName,
            measureSpecName,
            rule_val AS ruleVal,
            inventory AS inventory,
            STATUS AS statusNum,
            invalid_status AS invalidStatus,
            price AS price,
            unit_price AS unitPrice,
            created_at AS createdAt,
            updated_at AS updatedAt,
            min_order_quantity AS minOrderQuantity,
            audit_result AS auditResult,
            audit_opinion AS auditOpinion
        FROM (
            SELECT
                t1.sc_id AS id,
                c.id commId,
                a.provider_name providerName,
                sctmp.supplier_id,
                sctmp.min_img,
                sctmp.code69,
                sctmp.code,
                cb.name AS brandName,
                c.name AS commName,
                c.category_one_id AS categoryOneId,
                cu.name AS unitName,
                cms.name AS measureSpecName,
                sctmp.rule_val,
                sctmp.inventory,
                t1.status AS STATUS,
                sctmp.invalid_status,
                sctmp.price,
                sctmp.unit_price,
                sctmp.created_at,
                t1.updated_at,
                sctmp.min_order_quantity,
                t1.audit_result,
                t1.audit_opinion
            FROM
                    supplier_commodity_tmp sctmp
                INNER JOIN (
                SELECT
                     <include refid="audit"/>
                FROM supplier_commodity_audit t
                WHERE t.status = 6
                  AND t.audit_flag = 1

                ) t1 ON sctmp.sca_id = t1.id
                INNER JOIN commodity c ON sctmp.code69 = c.code69
                LEFT JOIN comm_brand cb ON c.brand_id = cb.id
                LEFT JOIN comm_measure_spec cms ON sctmp.measure_spec_id = cms.id
                LEFT JOIN comm_unit cu ON sctmp.unit_id = cu.id
                LEFT JOIN account a ON a.account_id = sctmp.supplier_id
                <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(supplierId)">
                    WHERE sctmp.supplier_id = #{supplierId}
                </if>

        UNION
            SELECT
                sc.id,
                c.id commId,
                a.provider_name providerName,
                sc.supplier_id,
                sc.min_img,
                c.code69,
                sc.code,
                cb.name AS brandName,
                c.name AS commName,
                c.category_one_id AS categoryOneId,
                cu.name AS unitName,
                cms.name AS measureSpecName,
                sc.rule_val,
                sc.inventory,
                sc.status,
                sc.invalid_status,
                sc.price,
                sc.unit_price,
                sc.created_at,
                sc.updated_at,
                sc.min_order_quantity,
                t1.audit_result,
                t1.audit_opinion
            FROM
                supplier_commodity sc
                LEFT JOIN (
                SELECT
                    <include refid="audit"/>
                FROM
                    supplier_commodity_audit t
                WHERE t.audit_flag = 1
                  AND t.status != 6

                  ) t1 ON sc.id = t1.sc_id
                INNER JOIN commodity c ON sc.code69 = c.code69
                LEFT JOIN comm_brand cb ON c.brand_id = cb.id
                LEFT JOIN comm_measure_spec cms ON sc.measure_spec_id = cms.id
                LEFT JOIN comm_unit cu ON sc.unit_id = cu.id
                LEFT JOIN account a ON a.account_id = sc.supplier_id
                WHERE sc.deleted = 0
                <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(supplierId)">
                    AND sc.supplier_id = #{supplierId}
                </if>
                AND (t1.id IS NULL AND sc.status IN (0, 2, 3))
        UNION
            SELECT
                sc.id,
                c.id commId,
                a.provider_name providerName,
                sc.supplier_id,
                sc.min_img,
                c.code69,
                sc.code,
                cb.name AS brandName,
                c.name AS commName,
                c.category_one_id AS categoryOneId,
                cu.name AS unitName,
                cms.name AS measureSpecName,
                sc.rule_val,
                sc.inventory,
                t1.status,
                sc.invalid_status,
                sc.price,
                sc.unit_price,
                sc.created_at,
                sc.updated_at,
                sc.min_order_quantity,
                t1.audit_result,
                t1.audit_opinion
            FROM
                    supplier_commodity sc
                LEFT JOIN (
                SELECT
                   <include refid="audit"/>
                FROM
                   supplier_commodity_audit t
                WHERE t.audit_flag = 1
                  AND t.status != 6

                  ) t1 ON sc.id = t1.sc_id
                INNER JOIN commodity c ON sc.code69 = c.code69
                LEFT JOIN comm_brand cb ON c.brand_id = cb.id
                LEFT JOIN comm_measure_spec cms ON sc.measure_spec_id = cms.id
                LEFT JOIN comm_unit cu ON sc.unit_id = cu.id
                LEFT JOIN account a ON a.account_id = sc.supplier_id
                WHERE sc.deleted = 0
                <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(supplierId)">
                    AND sc.supplier_id = #{supplierId}
                </if>
                AND (t1.id IS NOT NULL AND sc.status IN (0, 2, 3))
            ) t
        GROUP BY id HAVING 1 = 1

        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(auditResult)">
            AND t.audit_result = #{auditResult}
        </if>

        <!-- 供应商 -->
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(inputvalue) and @so.sao.shop.supplier.util.Ognl@isEmpty(role)">
            AND (t.code69 = #{inputvalue} OR commName LIKE CONCAT ('%',#{inputvalue},'%'))
        </if>
        <!-- 管理员 -->
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(inputvalue) and role == 'admin'">
            AND (t.code69 = #{inputvalue} OR commName LIKE CONCAT ('%',#{inputvalue},'%') OR providerName LIKE CONCAT ('%',#{inputvalue},'%'))
        </if>

        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(status)">
            AND (t.status = #{status})
        </if>

        <!-- 保留项 end -->
        ORDER BY t.updated_at DESC , t.id DESC
    </select>

    <!--根据unitId查询商品单位是否被supplier_commodity使用-->
    <select id="countByUnitId" resultType="int">
        select
        count(*)
        from supplier_commodity where deleted = 0
        AND unit_id = #{unitId}
    </select>

    <!--计量规格： findAllSupplierCommodityById 通过规格id 查SupplierCommodity  deleted = 0正在使用-->
    <select id="countSupplierCommodityById" parameterType="long"  resultType="int">
        SELECT count(*)
        FROM supplier_commodity
        WHERE deleted = 0 AND measure_spec_id = #{commMeasureSpecId}
    </select>

    <!--根据id数组查询，过滤已删除的商品-->
    <select id="findSupplierCommodityByIds" resultMap="BaseResultMap">
        select
        id,
        supplier_id,
        updated_at,
        status
        from supplier_commodity
        where deleted = 0
        AND id IN
        <foreach collection="ids" open="(" close=")" separator="," item="id">
          #{id}
        </foreach>
    </select>

    <!--商品失效-->
    <update id="updateInvalidStatus" parameterType="so.sao.shop.supplier.domain.SupplierCommodity">
        UPDATE supplier_commodity
        SET invalid_status = #{invalidStatus} ,updated_at = #{updatedAt}
        WHERE supplier_id = #{supplierId}
    </update>

    <!--根据商品编号更改商品库存-->
    <update id="updateInventoryByGoodsId" parameterType="java.util.Map">
        <foreach collection="map" item="count" index="goodsId" open="" close="" separator=";">
            update supplier_commodity
            set
                inventory = inventory + #{count}
            where id = #{goodsId}
            and   inventory >= -#{count}
        </foreach>
    </update>

    <!--获取商品信息-->
    <select id="findBySupplierId" resultType="so.sao.shop.supplier.domain.SupplierCommodity">
        SELECT
        id,
        sku,
        remark,
        description,
        code,
        code69,
        rule_val AS ruleVal,
        inventory,
        min_img AS minImg,
        price,
        unit_price AS unitPrice,
        created_at AS createdAt,
        updated_at AS updatedAt,
        supplier_id AS supplierId,
        status
        FROM supplier_commodity WHERE supplier_id = #{supplierId}
    </select>

    <!--根据商品ID查询购物车所需字段-->
    <select id="findOneToCartItem" resultMap="BaseResultMap">
        SELECT
        id,
        supplier_id,
        price,
        min_img,
        measure_spec_id,
        rule_val,
        unit_id,
        sku,
        status,
        invalid_status,
        code69,
        inventory,
        deleted
        FROM supplier_commodity
        WHERE id = #{id}
    </select>

    <!--商品失效-->
    <update id="updateInvalidStatusById" parameterType="so.sao.shop.supplier.domain.SupplierCommodity">
        UPDATE supplier_commodity
        SET invalid_status = #{invalidStatus} ,updated_at = #{updatedAt}
        WHERE id = #{id}
    </update>

    <!-- 更新商品规格信息 -->
    <update id="updateAmz">
        UPDATE supplier_commodity SET
        sku = #{sku},
        supplier_id = #{supplierId},
        code69 = #{code69},
        price = #{price},
        unit_price = #{unitPrice},
        min_img = #{minImg},
        updated_at = #{updatedAt},
        updated_by = #{updatedBy},
        remark = #{remark},
        status = #{status},
        invalid_status = #{invalidStatus}
        WHERE id = #{id}
    </update>

    <!-- 更新供应商 商品表中min_img信息 -->
    <update id="updateMinImg">
        UPDATE supplier_commodity
        SET
        min_img = #{minImg},
        updated_at = #{updatedAt},
        updated_by = #{updatedBy}
        WHERE id = #{scId}
    </update>

	<!-- 轮播图查询商品信息 -->
    <select id="findCommByNameAndCategory" resultType="so.sao.shop.supplier.pojo.output.CommodityBannerOut">
    	SELECT
		  sc.id AS commodityId,
		  a.provider_name AS providerName,
		  sc.min_img AS minImg,
		  sc.code69 AS code69,
		  sc.code AS commodityCode,
		  com.name AS brandName,
		  c.name AS commodityName,
		  cms.name AS specName,
		  sc.rule_val AS ruleVal,
		  cu.name AS unitName,
		  sc.inventory AS inventory,
		  sc.status AS status
		FROM
		  supplier_commodity sc
		  LEFT JOIN commodity c
		    ON sc.code69 = c.code69
		  LEFT JOIN comm_measure_spec cms
		    ON sc.measure_spec_id = cms.id
		  LEFT JOIN comm_unit cu
		    ON sc.unit_id = cu.id
		  LEFT JOIN account a
		    ON sc.supplier_id = a.account_id
		  LEFT JOIN comm_brand com
		    ON c.brand_id = com.id
		WHERE sc.deleted = 0
		AND sc.status = 2
		<if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(commodityName)">
			AND c.name like CONCAT ('%',#{commodityName},'%')
		</if>
		<if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(categoryOneId)">
			AND c.category_one_id = #{categoryOneId}
		</if>
		<if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(categoryTwoId)">
			AND c.category_two_id = #{categoryTwoId}
		</if>
		<if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(categoryThreeId)">
			AND c.category_three_id = #{categoryThreeId}
		</if>
		ORDER BY sc.updated_at DESC
    </select>

    <!--商品状态修改-->
    <update id="updateSupplierCommodityStatusById" >
        UPDATE supplier_commodity
        SET status = #{status} ,updated_at = #{updatedAt}
        WHERE id = #{id}
    </update>
    <!--根据商品id查询很出当前商品的状态-->

    <select id="findSupplierCommStatus" resultType="int">
        SELECT  count(*) FROM supplier_commodity_audit sca
        LEFT JOIN supplier_commodity_tmp sctmp   ON sctmp.sca_id = sca.id
        WHERE sca.status = 6
        AND sca.audit_flag = 1 AND sca.sc_id = #{id}
    </select>

    <select id="findAuditStatus" resultType="int">
      SELECT status FROM supplier_commodity_audit
       WHERE audit_flag = 1 AND sc_id  = #{id}
    </select>

    <!-- 供应商首页-商品信息统计 -->
    <select id="countCommDetail" resultType="so.sao.shop.supplier.pojo.output.CountCommDetailOutput">
        SELECT
        (SELECT COUNT(id) FROM supplier_commodity WHERE deleted=0 AND inventory_status=1 AND supplier_id = #{1}) AS inventoryStatusNum ,
        (SELECT COUNT(sca.id) FROM supplier_commodity_audit sca JOIN supplier_commodity sc ON sca.sc_id=sc.id WHERE sc.deleted=0 AND sca.status=2 AND sca.audit_flag=1 AND sca.supplier_id = #{1}) AS onShelvesNum ,
        ((SELECT COUNT(id) FROM supplier_commodity WHERE deleted=0 AND STATUS=3 AND supplier_id = #{1})-
        (SELECT COUNT(sca.id) FROM supplier_commodity_audit sca JOIN supplier_commodity sc ON sca.sc_id=sc.id WHERE sc.deleted=0 AND sca.status=4 AND sca.audit_flag=1 AND sca.supplier_id = #{1})) AS offShelvesNum ,
        (SELECT COUNT(sca.id) FROM supplier_commodity_audit sca JOIN supplier_commodity sc ON sca.sc_id=sc.id WHERE sc.deleted=0 AND sca.status=4 AND sca.audit_flag=1 AND sca.supplier_id = #{1}) AS onShelvesAuditNum ,
        (SELECT COUNT(sca.id) FROM supplier_commodity_audit sca JOIN supplier_commodity sc ON sca.sc_id=sc.id WHERE sc.deleted=0 AND sca.status=5 AND sca.audit_flag=1 AND sca.supplier_id = #{1}) AS offShelvesAuditNum ,
        (SELECT COUNT(id) FROM supplier_commodity WHERE deleted=0 AND supplier_id = #{1}) AS skuNum
        FROM account a WHERE account_id = #{1}
    </select>

    <!-- 商品库存查询接口 -->
    <select id="searchCommInventory" resultType="so.sao.shop.supplier.pojo.output.CommInventoryOutput" parameterType="so.sao.shop.supplier.pojo.input.CommInventoryInput">
        SELECT
            id,
            supplierName,
            code69,
            brandName,
            commName,
            measureSpecName,
            ruleVal,
            cartonName,
            inventoryMinimum,
            inventory,
            unitName,
            inventoryStatus,
            categoryOneId,
            categoryTwoId,
            categoryThreeId,
            status
        FROM
        (
            SELECT
                t1.sc_id AS id,
                sct.supplier_id,
                a.provider_name AS supplierName,
                sct.code69 AS code69,
                cb.name AS brandName,
                c.name AS commName,
                cms.name AS measureSpecName,
                sct.rule_val AS ruleVal,
                cc.name AS cartonName,
                sct.inventory_minimum AS inventoryMinimum,
                sct.inventory AS inventory,
                cu.name AS unitName,
                sct.inventory_status AS inventoryStatus,
                c.category_one_id AS categoryOneId,
                c.category_two_id AS categoryTwoId,
                c.category_three_id AS categoryThreeId,
                sct.status AS status
            FROM
              supplier_commodity_tmp sct
            INNER JOIN (
                SELECT
                    t.id,
                    t.sc_id,
                    t.supplier_id,
                    t.updated_at,
                    t.created_at,
                    t.status,
                    t.audit_result,
                    t.audit_flag,
                    t.audit_by,
                    t.audit_opinion
                FROM
                  supplier_commodity_audit t
                WHERE
                    t.status = 6 AND t.audit_flag = 1) t1 ON sct.sca_id = t1.id
                LEFT JOIN account a ON sct.supplier_id = a.account_id
                LEFT JOIN commodity c ON sct.code69 = c.code69
                LEFT JOIN comm_brand cb ON c.brand_id = cb.id
                LEFT JOIN comm_measure_spec cms ON sct.measure_spec_id = cms.id
                LEFT JOIN comm_carton cc ON sct.carton_id = cc.id
                LEFT JOIN comm_unit cu ON sct.unit_id = cu.id
                WHERE 1 = 1
                <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(supplierId)">
                    AND sct.supplier_id = #{supplierId}
                </if>
            UNION
                SELECT
                    sc.id AS id,
                    sc.supplier_id,
                    a.provider_name AS supplierName,
                    sc.code69 AS code69,
                    cb.name AS brandName,
                    c.name AS commName,
                    cms.name AS measureSpecName,
                    sc.rule_val AS ruleVal,
                    cc.name AS cartonName,
                    sc.inventory_minimum AS inventoryMinimum,
                    sc.inventory AS inventory,
                    cu.name AS unitName,
                    sc.inventory_status AS inventoryStatus,
                    c.category_one_id AS categoryOneId,
                    c.category_two_id AS categoryTwoId,
                    c.category_three_id AS categoryThreeId,
                    sc.status AS status
                FROM
                    supplier_commodity sc
                LEFT JOIN (
                    SELECT
                        t.id,
                        t.sc_id,
                        t.supplier_id,
                        t.updated_at,
                        t.created_at,
                        t.status,
                        t.audit_result,
                        t.audit_flag,
                        t.audit_by,
                        t.audit_opinion
                    FROM
                        supplier_commodity_audit t
                    WHERE t.status != 6) t1 ON sc.id = t1.sc_id
                    LEFT JOIN account a ON sc.supplier_id = a.account_id
                    LEFT JOIN commodity c ON sc.code69 = c.code69
                    LEFT JOIN comm_brand cb ON c.brand_id = cb.id
                    LEFT JOIN comm_measure_spec cms ON sc.measure_spec_id = cms.id
                    LEFT JOIN comm_carton cc ON sc.carton_id = cc.id
                    LEFT JOIN comm_unit cu ON sc.unit_id = cu.id
                    WHERE t1.id IS NULL
                    <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(supplierId)">
                        AND sc.supplier_id = #{supplierId}
                    </if>
            UNION
                SELECT
                    sc.id AS id,
                    sc.supplier_id,
                    a.provider_name AS supplierName,
                    sc.code69 AS code69,
                    cb.name AS brandName,
                    c.name AS commName,
                    cms.name AS measureSpecName,
                    sc.rule_val AS ruleVal,
                    cc.name AS cartonName,
                    sc.inventory_minimum AS inventoryMinimum,
                    sc.inventory AS inventory,
                    cu.name AS unitName,
                    sc.inventory_status AS inventoryStatus,
                    c.category_one_id AS categoryOneId,
                    c.category_two_id AS categoryTwoId,
                    c.category_three_id AS categoryThreeId,
                    t1.status AS status
                FROM
                    supplier_commodity sc
                LEFT JOIN (
                    SELECT
                        t.id,
                        t.sc_id,
                        t.supplier_id,
                        t.updated_at,
                        t.created_at,
                        t.status,
                        t.audit_result,
                        t.audit_flag,
                        t.audit_by,
                        t.audit_opinion
                    FROM
                        supplier_commodity_audit t
                    WHERE t.status != 6) t1 ON sc.id = t1.sc_id
                    LEFT JOIN account a ON sc.supplier_id = a.account_id
                    LEFT JOIN commodity c ON sc.code69 = c.code69
                    LEFT JOIN comm_brand cb ON c.brand_id = cb.id
                    LEFT JOIN comm_measure_spec cms ON sc.measure_spec_id = cms.id
                    LEFT JOIN comm_carton cc ON sc.carton_id = cc.id
                    LEFT JOIN comm_unit cu ON sc.unit_id = cu.id
                    WHERE t1.id IS NOT NULL
                    <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(supplierId)">
                        AND sc.supplier_id = #{supplierId}
                    </if>
                ) t GROUP BY id HAVING 1 = 1

            <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(commCode69)">
                AND t.code69 = #{commCode69}
            </if>
            <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(commName)">
                AND t.commName LIKE CONCAT ('%',#{commName},'%')
            </if>
            <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(inventoryStatus)">
                AND t.inventoryStatus = #{inventoryStatus}
            </if>
            <if test="flag == 1">
                <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(inputvalue)">
                    AND (t.code69 = #{inputvalue} OR t.commName LIKE CONCAT ('%',#{inputvalue},'%') OR t.supplierName LIKE CONCAT ('%',#{inputvalue},'%'))
                </if>
            </if>
            <if test="flag == 0">
                <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(inputvalue)">
                    AND (t.code69 = #{inputvalue} OR t.commName LIKE CONCAT ('%',#{inputvalue},'%'))
                </if>
            </if>
            <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(supplierName)">
                AND t.supplierName LIKE CONCAT ('%',#{supplierName},'%')
            </if>
            <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(categoryOneId)">
                AND t.categoryOneId = #{categoryOneId}
            </if>
            <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(categoryTwoId)">
                AND t.categoryTwoId = #{categoryTwoId}
            </if>
            <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(categoryThreeId)">
                AND t.categoryThreeId = #{categoryThreeId}
            </if>
            <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(status)">
                AND t.status = #{status}
            </if>
            ORDER BY t.inventoryStatus DESC
    </select>

    <!-- 获取某商品库存信息 -->
    <select id="getInventoryById" resultType="so.sao.shop.supplier.pojo.output.CommInventoryInfoOutput" parameterType="java.lang.Long">
        SELECT
            id,
            inventory_minimum AS inventoryMinimum,
            inventory
        FROM
            supplier_commodity
        WHERE
            id = #{id}
    </select>

    <!-- 获取多个商品库存信息 -->
    <select id="getInventoryByIds" resultType="so.sao.shop.supplier.pojo.output.CommInventoryInfoOutput" parameterType="java.util.List">
        SELECT
            id,
            inventory_minimum AS inventoryMinimum,
            inventory
        FROM
            supplier_commodity
        WHERE
            id in
        <foreach collection="goodsList" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <!-- 更新某商品库存信息 -->
    <update id="updateInventoryById" parameterType="so.sao.shop.supplier.pojo.input.CommInventoryInfoInput">
        UPDATE
            supplier_commodity
        SET
            inventory_minimum = #{inventoryMinimum},
            inventory = #{inventory},
            inventory_status = #{inventoryStatus}
        WHERE
            id = #{id}
    </update>
    <!-- 更新某商品库存信息 tmp -->
    <update id="updateInventoryByTmpScaId" parameterType="so.sao.shop.supplier.pojo.input.CommInventoryInfoInput">
        UPDATE
            supplier_commodity_tmp
        SET
            inventory_minimum = #{inventoryMinimum},
            inventory = #{inventory},
            inventory_status = #{inventoryStatus}
        WHERE
            sca_id = (
                SELECT
                    sca.id
                FROM
                    supplier_commodity_audit sca
                JOIN supplier_commodity sc ON sca.sc_id = sc.id
                AND sc.id = #{id}
	    )
    </update>

    <!-- 更新库存状态 -->
    <update id="updateInventoryStatus">
        UPDATE
            supplier_commodity
        SET
            inventory_status = #{status}
        WHERE
            id = #{id}
    </update>
</mapper>