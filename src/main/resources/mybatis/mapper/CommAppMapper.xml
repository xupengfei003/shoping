<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="so.sao.shop.supplier.dao.app.CommAppDao">
    <sql id="searchColumns">
        sc.id AS id,
        sc.min_img AS minImg,
        sc.sku AS sku,
        c.code69 AS code69,
        sc.code AS code,
        c.origin_place AS originPlace,
        cb.name AS brandName,
        c.name AS commName,
        cu.name AS unitName,
        cms.name AS measureSpecName,
        sc.rule_val AS ruleVal,
        sc.price AS price,
        sc.unit_price AS unitPrice,
        sc.inventory AS inventory,
        sc.created_at AS createdAt,
        sc.updated_at AS updatedAt,
        sc.invalid_status AS invalidStatus
    </sql>

    <!--多条件查询商品信息-->
    <select id="findAll" resultType="so.sao.shop.supplier.pojo.output.CommAppSeachOutput">
        SELECT
        <include refid="searchColumns"/>
        FROM
        supplier_commodity sc
        LEFT JOIN comm_measure_spec cms ON sc.measure_spec_id = cms.id
        LEFT JOIN comm_unit cu ON sc.unit_id=cu.id
        ,commodity c
        LEFT JOIN comm_brand cb ON c.brand_id=cb.id
        LEFT JOIN comm_category cc1 ON c.category_one_id=cc1.id
        LEFT JOIN comm_category cc2 ON c.category_two_id=cc2.id
        LEFT JOIN comm_category cc3 ON c.category_three_id=cc3.id
        WHERE
        sc.code69 = c.code69
        AND sc.deleted = 0
        AND sc.status = 2
        AND sc.invalid_status = 1
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(supplierId)">
            AND sc.supplier_id = #{supplierId}
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(sku)">
            AND sc.sku = #{sku}
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(code69)">
            AND sc.code69 = #{code69}
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(suppCommCode)">
            AND sc.code = #{suppCommCode}

        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(minPrice) and @so.sao.shop.supplier.util.Ognl@isEmpty(maxPrice)">
            AND sc.price &gt;= #{minPrice}
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(maxPrice) and @so.sao.shop.supplier.util.Ognl@isEmpty(minPrice)">
            AND  sc.price &lt;= #{maxPrice}
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(minPrice) and @so.sao.shop.supplier.util.Ognl@isNotEmpty(maxPrice)">
            AND sc.price BETWEEN #{minPrice} AND #{maxPrice}
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(inputValue)">
            AND
            ((cc1.name like '%${inputValue}%'
            OR cc2.name like '%${inputValue}%'
            OR cc3.name like '%${inputValue}%')
            OR c.name = #{inputValue})
        </if>
        ORDER BY sc.updated_at DESC
    </select>

    <!--查询所有商品科属-->
    <select id="searchCategories" resultType="so.sao.shop.supplier.pojo.output.CategoryOutput">
        SELECT
        id,name,level,pid
        FROM comm_category
        WHERE deleted = 0
    </select>
    <!--模糊查询品牌名-->
    <select id="findBrandName" parameterType="java.lang.String" resultType="so.sao.shop.supplier.pojo.output.CommBrandOutput">
        SELECT
        id,name
        FROM comm_brand cb
        WHERE
        deleted = 0
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(name)">
            AND cb.name LIKE '%${name}%'
        </if>
    </select>
    <!--根据code69,供应商ID，商品名称，分类，品牌Ids查询商品信息-->
    <select id="findCommodities" resultType="so.sao.shop.supplier.pojo.output.CommAppOutput">
        SELECT
        sc.id AS id,
        sc.min_img AS minImg,
        sc.supplier_Id AS supplierId,
        sc.code69 AS code69,
        sc.code AS CODE,
        c.origin_place AS originPlace,
        cb.name AS brandName,
        c.name AS commName,
        cu.name AS unitName,
        ct.name AS tagName,
        cms.name AS measureSpecName,
        sc.rule_val AS ruleVal,
        sc.price AS price,
        sc.unit_price AS unitPrice,
        sc.inventory AS inventory,
        acc.provider_name AS providerName,
        acc.contract_register_address_city AS contractRegisterAddressCity,
        (SELECT NAME FROM sys_region r WHERE r.sr_id=acc.contract_register_address_city) AS contractRegisterAddressCityName,
        sc.created_at AS createdAt,
        sc.updated_at AS updatedAt,
        sc.invalid_status AS invalidStatus
        FROM
        supplier_commodity sc
        LEFT JOIN comm_measure_spec cms ON sc.measure_spec_id = cms.id
        LEFT JOIN comm_tag ct ON sc.tag_id = ct.id
        LEFT JOIN comm_unit cu ON sc.unit_id=cu.id
        LEFT JOIN commodity c ON c.code69=sc.code69
        LEFT JOIN comm_brand cb ON c.brand_id=cb.id
        LEFT JOIN comm_category cc1 ON c.category_one_id=cc1.id
        LEFT JOIN comm_category cc2 ON c.category_two_id=cc2.id
        LEFT JOIN comm_category cc3 ON c.category_three_id=cc3.id
        LEFT JOIN account acc ON acc.account_id=sc.supplier_id
        WHERE sc.invalid_status = 1
        AND sc.deleted = 0
        AND sc.status = 2
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(code69)">
            AND sc.code69 = #{code69}
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(supplierId)">
            AND sc.supplier_id = #{supplierId}
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(commName)">
            AND c.name LIKE '%${commName}%'
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(categoryOneId)">
            AND c.category_one_id = #{categoryOneId}
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(categoryTwoId)">
            AND c.category_two_id = #{categoryTwoId}
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(categoryThreeId)">
            AND c.category_three_id = #{categoryThreeId}
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(brandIds)">
            AND cb.id IN
            <foreach collection="brandIds" open="(" close=")" separator="," item="brandId">
                #{brandId}
            </foreach>
        </if>
        ORDER BY sc.updated_at DESC
    </select>

    <!-- 根据Code69查询供应商信息-->
    <select id="searchSuppliersByCode69" resultType="so.sao.shop.supplier.pojo.output.AccountOutput" >
        SELECT
        a.account_id AS accountId,
        a.provider_name AS providerName,
        a.responsible AS responsible,
        a.responsible_phone AS responsiblePhone,
        a.contract_end_date AS contractEndDate,
        a.regist_address_province  AS registAddressProvince,
        r.name AS registAddressProvinceName,
        a.regist_address_city AS registAddressCity,
        (SELECT NAME FROM sys_region r WHERE a.regist_address_city = r.sr_id) AS registAddressCityName,
        a.regist_address_district AS registAddressDistrict,
        (SELECT NAME FROM sys_region r WHERE a.regist_address_district = r.sr_id) AS registAddressDistrictName,
        a.contract_register_address_province AS contractRegisterAddressProvince,
        (SELECT NAME FROM sys_region r WHERE a.contract_register_address_province = r.sr_id) AS contractRegisterAddressProvinceName,
        a.contract_register_address_city AS contractRegisterAddressCity,
        (SELECT NAME FROM sys_region r WHERE a.contract_register_address_city = r.sr_id) AS contractRegisterAddressCityName,
        a.contract_register_address_district AS contractRegisterAddressDistrict,
        (SELECT NAME FROM sys_region r WHERE a.contract_register_address_district = r.sr_id) AS contractRegisterAddressDistrictName
        FROM account a
        LEFT JOIN sys_region r ON a.regist_address_province = r.sr_id
        LEFT JOIN supplier_commodity sc ON sc.supplier_id =a.account_id
        WHERE sc.deleted=0
        AND sc.status =2
        AND sc.code69 = #{code69}
    </select>

    <!-- 根据供应商ID查询主营分类-->
    <select id="findMainCateGory" resultType="so.sao.shop.supplier.pojo.vo.CategoryVo">
       SELECT DISTINCT
	          cc.id AS id,
	          cc. NAME AS NAME
       FROM
	          supplier_commodity sc ,commodity c LEFT JOIN comm_category cc ON c.category_three_id = cc.id
       WHERE
	          sc.code69 = c.code69
              AND sc.supplier_id = #{supplierId}
              AND sc.deleted = 0
              AND sc.invalid_status = 1
              AND sc. STATUS = 2
              and cc. LEVEL = 3
    </select>


    <!--findCategories根据科属的等级参数获取所有的2或3级科属    -->
    <select id="findCategories" parameterType="int" resultType="so.sao.shop.supplier.pojo.output.CategoryOutput">
        SELECT DISTINCT
        cc.id, cc.name, cc.level, cc.pid
        FROM comm_category cc, commodity comm
        WHERE
        cc.level = #{level}
        AND ( cc.id = comm.category_two_id OR cc.id = comm.category_three_id )
        AND comm.code69
        IN
        (SELECT sc.code69 FROM supplier_commodity sc
        WHERE sc.deleted = 0
        AND sc.status=2
        AND sc.invalid_status=1
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(supplierId)">
            AND sc.supplier_id = #{ supplierId }
        </if>
        )
        ORDER BY cc.updated_at DESC
    </select>

    <!-- findAllBrands 根据条件 获取所属类型下面的 商品的全部品牌  -->
    <select id="findAllBrands" parameterType="int"  resultType="so.sao.shop.supplier.pojo.output.CommBrandOutput">
        SELECT DISTINCT brand.id, brand.name
        FROM comm_brand brand , commodity comm, supplier_commodity sc
        WHERE sc.deleted = 0
        AND sc.invalid_status = 1
        AND sc.status = 2
        AND comm.brand_id = brand.id
        AND  sc.code69 = comm.code69
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(supplierId)">
            AND sc.supplier_id = #{ supplierId }
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(categoryId)">
            AND ( comm.category_two_id = #{categoryId}  OR  comm.category_three_id = #{categoryId} )
        </if>
        ORDER BY brand.updated_at DESC
    </select>

    <!-- findCommoditiesByConditionOrder 根据动态条件(供应商ID 分类 品牌ids 排序条件)查询商品 -->
    <select id="findCommoditiesByConditionOrder"  resultType="so.sao.shop.supplier.pojo.output.CommAppOutput">
        SELECT
        sc.id AS id,
        sc.supplier_id AS supplierId,
        sc.min_img AS minImg,
        sc.code69 AS code69,
        sc.code AS CODE,
        sc.rule_val AS ruleVal,
        sc.price AS price,
        sc.unit_price AS unitPrice,
        sc.inventory AS inventory,
        sc.production_date AS productionDate,
        sc.guarantee_period AS guaranteePeriod,
        sc.guarantee_period_unit AS guaranteePeriodUnit,
        cb.name AS brandName,
        comm.name AS commName,
        comm.origin_place AS originPlace,
        cu.name AS unitName,
        tag.name AS tagName,
        cms.name AS measureSpecName,
        cc1.name AS categoryOneName,
        cc2.name AS categoryTwoName,
        cc3.name AS categoryThreeName,
        acc.provider_name AS providerName,
        acc.contract_register_address_city AS contractRegisterAddressCity,
        (SELECT NAME FROM sys_region r WHERE r.sr_id=acc.contract_register_address_city) AS contractRegisterAddressCityName,
        sc.created_at AS createdAt,
        sc.updated_at AS updatedAt,
        sc.invalid_status AS invalidStatus
        FROM
        supplier_commodity sc
        LEFT JOIN comm_tag tag ON sc.tag_id = tag.id
        , comm_measure_spec cms
        , comm_unit cu
        , commodity comm
        , comm_brand cb
        , comm_category cc1
        , comm_category cc2
        , comm_category cc3
        , account acc
        WHERE
            sc.deleted = 0
        AND sc.invalid_status = 1
        AND sc.status = 2
        AND sc.measure_spec_id = cms.id
        AND sc.unit_id = cu.id
        AND comm.code69 = sc.code69
        AND comm.brand_id = cb.id
        AND  comm.category_one_id = cc1.id
        AND  comm.category_two_id = cc2.id
        AND comm.category_three_id = cc3.id
        AND acc.account_id = sc.supplier_id
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty( name )">
            AND ( comm.name LIKE '%${name}%' OR cb.name LIKE '%${name}%' OR acc.provider_name LIKE '%${name}%' )
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(supplierId)">
            AND sc.supplier_id = #{supplierId}
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(categoryOneId)">
            AND comm.category_one_id = #{categoryOneId}
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(categoryTwoId)">
            AND comm.category_two_id = #{categoryTwoId}
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(categoryThreeId)">
            AND comm.category_three_id = #{categoryThreeId}
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(brandIds)">
            AND cb.id IN
            <foreach collection="brandIds" open="(" close=")" separator="," item="id">
                #{id}
            </foreach>
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isDESC(orderPriceOrSalesNum )">
            ORDER BY sc.price DESC
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isASC(orderPriceOrSalesNum )">
            ORDER BY sc.price ASC
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotASCandDESC(orderPriceOrSalesNum )" >
            ORDER BY sc.updated_at DESC
        </if>
    </select>


    <select id="listCommodities" resultType="so.sao.shop.supplier.pojo.output.CommodityOutput">
        SELECT
        sc.id AS id,
        sc.supplier_id AS supplierId,
        cb.name AS brandName,
        c.category_one_id AS categoryOneId,
        c.category_two_id AS categoryTwoId,
        c.category_three_id AS categoryThreeId,
        c.name AS name,
        sc.remark AS remark,
        sc.description AS description,
        sc.code AS code,
        sc.code69 AS code69,
        c.origin_place AS originPlace,
        c.company_name AS companyName,
        c.market_time AS marketTime,
        sc.tag_id AS tagId,
        ct.name AS tagName,
        sc.measure_spec_id AS measureSpecId,
        cms.name AS measureSpecName,
        sc.rule_val AS ruleVal,
        sc.unit_id AS unitId,
        cu.name AS unitName,
        sc.inventory AS inventory,
        sc.min_img AS minImg,
        sc.price AS price,
        sc.unit_price AS unitPrice,
        sc.created_at AS createdAt,
        sc.updated_at AS updatedAt,
        sc.supplier_id AS supplierId,
        sc.status AS status,
        sc.invalid_status AS invalidStatus,
        (SELECT NAME FROM comm_category cc WHERE cc.id = c.category_one_id) AS categoryOneName,
        (SELECT NAME FROM comm_category cc WHERE cc.id = c.category_two_id) AS categoryTwoName,
        (SELECT NAME FROM comm_category cc WHERE cc.id = c.category_three_id) AS categoryThreeName
        FROM
        supplier_commodity sc INNER JOIN (commodity c LEFT JOIN comm_brand cb ON c.brand_id = cb.id) ON sc.code69 = c.code69
        LEFT JOIN comm_measure_spec cms ON sc.measure_spec_id = cms.id LEFT JOIN comm_unit cu ON sc.unit_id = cu.id LEFT JOIN comm_tag ct ON sc.tag_id = ct.id
        <where>
            sc.invalid_status = 1
            AND sc.status = 2
            AND sc.deleted = 0
            <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(supplierId)">
                AND sc.supplier_id = #{supplierId}
            </if>
            <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(commName)">
                AND c.name LIKE CONCAT ('%',#{commName},'%')
            </if>
        </where>
        ORDER BY sc.updated_at DESC , sc.id DESC
    </select>
    <!--根据商品名称模糊查询商品-->
    <select id="findGoodsByName" resultType="java.util.Map">
        SELECT DISTINCT c.name
        FROM supplier_commodity sc,commodity c,account a,comm_brand cb
        WHERE sc.code69 = c.code69
        AND  sc.supplier_id = a.account_id
        AND  c.brand_id = cb.id
        AND sc.deleted = 0
        AND sc.status = 2
        AND sc.invalid_status = 1
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(name)">
            AND (c.name LIKE '${name}%' OR cb.name LIKE '${name}%' OR a.provider_name LIKE '${name}%')
        </if>
        limit 10
    </select>
    <!--【12】根据供应商商品ID获取商品详情-->
    <select id="findDetail" resultType="so.sao.shop.supplier.pojo.output.CommodityOutput">
        SELECT
        sc.id AS id,
        sc.supplier_id AS supplierId,
        cb.name AS brandName,
        c.category_one_id AS categoryOneId,
        c.category_two_id AS categoryTwoId,
        c.category_three_id AS categoryThreeId,
        c.name AS name,
        sc.remark AS remark,
        sc.description AS description,
        sc.code AS code,
        sc.code69 AS code69,
        c.origin_place AS originPlace,
        c.company_name AS companyName,
        c.market_time AS marketTime,
        sc.tag_id AS tagId,
        ct.name AS tagName,
        sc.measure_spec_id AS measureSpecId,
        cms.name AS measureSpecName,
        sc.rule_val AS ruleVal,
        sc.unit_id AS unitId,
        cu.name AS unitName,
        sc.inventory AS inventory,
        sc.min_img AS minImg,
        sc.price AS price,
        sc.unit_price AS unitPrice,
        sc.created_at AS createdAt,
        sc.updated_at AS updatedAt,
        sc.supplier_id AS supplierId,
        sc.status AS status,
        sc.invalid_status AS invalidStatus,
        sc.min_order_quantity AS  minOrderQuantity,
        sc.production_date AS productionDate,
        sc.guarantee_period AS guaranteePeriod,
        sc.guarantee_period_unit AS guaranteePeriodUnit,
        (SELECT NAME FROM comm_category cc WHERE cc.id = c.category_one_id) AS categoryOneName,
        (SELECT NAME FROM comm_category cc WHERE cc.id = c.category_two_id) AS categoryTwoName,
        (SELECT NAME FROM comm_category cc WHERE cc.id = c.category_three_id) AS categoryThreeName
        FROM
        supplier_commodity sc INNER JOIN (commodity c LEFT JOIN comm_brand cb ON c.brand_id = cb.id) ON sc.code69 = c.code69
        LEFT JOIN comm_measure_spec cms ON sc.measure_spec_id = cms.id LEFT JOIN comm_unit cu ON sc.unit_id = cu.id LEFT JOIN comm_tag ct ON sc.tag_id = ct.id
        WHERE sc.id = #{id} AND sc.status = 2 AND sc.deleted = 0
    </select>

    <!--  findComms -->
    <select id="findComms" parameterType="string" resultType="so.sao.shop.supplier.pojo.output.CommAppOutput">
        SELECT
        sc.id AS id,
        sc.supplier_id AS supplierId,
        sc.min_img AS minImg,
        sc.code69 AS code69,
        sc.code AS CODE,
        sc.rule_val AS ruleVal,
        sc.price AS price,
        sc.unit_price AS unitPrice,
        sc.inventory AS inventory,
        sc.created_at AS createdAt,
        sc.updated_at AS updatedAt,
        sc.invalid_status AS invalidStatus,
        sc.min_order_quantity AS minOrderQuantity,
        sc.production_date AS productionDate,
        sc.guarantee_period AS guaranteePeriod,
        sc.guarantee_period_unit AS guaranteePeriodUnit,
        cb.name AS brandName,
        cu.name AS unitName,
        tag.name AS tagName,
        cms.name AS measureSpecName,
        comm.origin_place AS originPlace,
        comm.name AS commName,
        acc.provider_name AS providerName,
        acc.contract_register_address_city AS contractRegisterAddressCity,
        cc2.name AS categoryTwoName,
        cc3.name AS categoryThreeName,
        (SELECT NAME FROM sys_region r WHERE r.sr_id=acc.contract_register_address_city) AS contractRegisterAddressCityName
        FROM
        supplier_commodity sc
        LEFT JOIN comm_tag tag ON sc.tag_id = tag.id
        , comm_measure_spec cms
        , comm_unit cu
        , commodity comm
        , comm_brand cb
        , comm_category cc2
        , comm_category cc3
        , account acc
        WHERE sc.deleted = 0
        AND sc.invalid_status = 1
        AND sc.status = 2
        AND sc.measure_spec_id = cms.id
        AND sc.unit_id = cu.id
        AND comm.code69 = sc.code69
        AND comm.brand_id = cb.id
        AND  comm.category_two_id = cc2.id
        AND comm.category_three_id = cc3.id
        AND acc.account_id = sc.supplier_id
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(name)">
            AND  ( acc.provider_name LIKE '%${name}%' OR comm.name LIKE '%${name}%' OR  cb.name LIKE '%${name}%' )
        </if>
    </select>

    <!--根据科属的等级参数获取所有的1或2或3级科属或供应商名下的1或2或3级科属-->
    <select id="findSupplierCategories" resultType="so.sao.shop.supplier.pojo.output.CategoryOutput">
        SELECT DISTINCT
        cc.id, cc.name, cc.level, cc.pid
        FROM comm_category cc, commodity comm
        WHERE
        cc.level = #{level}
        AND ( cc.id = comm.category_one_id OR cc.id = comm.category_two_id OR cc.id = comm.category_three_id )
        AND comm.code69
        IN
        (SELECT sc.code69 FROM supplier_commodity sc
        WHERE sc.deleted = 0
        AND sc.status=2
        AND sc.invalid_status=1
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(supplierId)">
            AND sc.supplier_id = #{ supplierId }
        </if>
        )
        ORDER BY cc.updated_at DESC
    </select>

    <!--根据供应商ID查询其可用的所有商品分类信息或所有可用的商品分类信息-->
    <select id="findBySupplierId" resultType="so.sao.shop.supplier.pojo.output.CategoryOutput">
        SELECT DISTINCT
        cc.id, cc.name, cc.level, cc.pid
        FROM comm_category cc, commodity comm
        WHERE
        comm.code69
        IN
        (SELECT sc.code69 FROM supplier_commodity sc
        WHERE sc.deleted = 0
        AND sc.status=2
        AND sc.invalid_status=1
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(supplierId)">
            AND sc.supplier_id = #{ supplierId }
        </if>
        )
        AND (  cc.id = comm.category_one_id OR cc.id = comm.category_two_id OR cc.id = comm.category_three_id )
        ORDER BY cc.updated_at DESC
    </select>

    <!--查看传入Id是否为一类分类ID-->
    <select id="findOneLevel" resultType="so.sao.shop.supplier.pojo.output.CategoryOutput">
        SELECT DISTINCT
        cc.id, cc.name, cc.level, cc.pid
        FROM comm_category cc, commodity comm
        WHERE
        cc.level = 1
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(id)">
            AND cc.id = #{id}
        </if>
        AND comm.code69
        IN
        (SELECT sc.code69 FROM supplier_commodity sc
        WHERE sc.deleted = 0
        AND sc.status=2
        AND sc.invalid_status=1
        )
        AND (  cc.id = comm.category_one_id OR cc.id = comm.category_two_id OR cc.id = comm.category_three_id )
    </select>


    <!--根据商品名称模糊查询商品名称列表-->
    <select id="findGoodsByGoodsName" resultType="java.util.Map">
        SELECT DISTINCT c.name
        FROM supplier_commodity sc,commodity c
        WHERE sc.code69 = c.code69
        AND sc.deleted = 0
        AND sc.status = 2
        AND sc.invalid_status = 1
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(name)">
            AND c.name LIKE '${name}%'
        </if>
        limit 10
    </select>

    <!--根据品牌名称模糊查询品牌名称列表-->
    <select id="findGoodsByBrandName" resultType="java.util.Map">
        SELECT DISTINCT cb.name
        FROM supplier_commodity sc,commodity c,comm_brand cb
        WHERE sc.code69 = c.code69
        AND  c.brand_id = cb.id
        AND sc.deleted = 0
        AND sc.status = 2
        AND sc.invalid_status = 1
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(name)">
            AND cb.name LIKE '${name}%'
        </if>
        limit 10
    </select>

    <!--根据供应商名称模糊查询供应商名称列表-->
    <select id="findGoodsBySupplierName" resultType="java.util.Map">
        SELECT DISTINCT a.provider_name AS name
        FROM supplier_commodity sc,account a
        WHERE sc.supplier_id = a.account_id
        AND sc.deleted = 0
        AND sc.status = 2
        AND sc.invalid_status = 1
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(name)">
            AND a.provider_name LIKE '${name}%'
        </if>
        limit 10
    </select>





</mapper>