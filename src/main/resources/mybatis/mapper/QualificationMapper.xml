<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="so.sao.shop.supplier.dao.QualificationDao">

    <!-- 资质审核 - 更新资质状态和时间-->
    <update id="updateQualificationStatus">
        UPDATE account
        SET
        qualification_status = #{qualificationStatus},
        update_date = #{updateDate}
        WHERE account_id = #{accountId};
    </update>

    <!-- 资质审核 - 更新资质拒绝原因-->
    <update id="updateQualificationReason">
        UPDATE qualification
        SET reason = #{ reason }
        WHERE account_id = #{accountId};
    </update>

    <!-- 查询登录供应商的资质状态 -->
    <select id="getAccountQualificationStatus" parameterType="long" resultType="int">
      SELECT  qualification_status
      FROM account
      WHERE  account_id = #{ accountId } ;
  </select>

    <select id="findByAccountId" resultType="so.sao.shop.supplier.pojo.output.QualificationOut">
        SELECT
            q.id AS id,
            q.reason AS reason,
            i.qualification_type AS qualificationType,
            i.cloud_name AS cloudName,
            i.min_cloud_name AS minCloudName,
            i.file_name AS fileName,
            i.url AS url,
            i.min_img_url AS minImgUrl,
            a.qualification_status AS qualificationStatus
        FROM
            qualification q
        LEFT JOIN qualification_image i
            ON q.id = i.qualification_id
        LEFT JOIN account a
            ON q.account_id = a.account_id
        WHERE q.delete = 0
            AND i.delete = 0
            AND a.account_id = #{accountId}
    </select>
    <!-- 根据条件查询资质列表 -->
    <select id="findPage" parameterType="so.sao.shop.supplier.pojo.input.QualificationInput" resultType="so.sao.shop.supplier.pojo.output.QualificationListOut">
        SELECT
            q.id AS id,
            a.account_id AS accountId,
            a.provider_name AS providerName,
            a.responsible_phone AS responsiblePhone,
            s.name AS province,
            s1.name AS city,
            s2.name AS district,
            q.create_time AS createTime,
            q.update_time AS updateTime,
            a.qualification_status AS qualificationStatus
        FROM
            qualification q
        LEFT JOIN account a
            ON q.account_id = a.account_id
        LEFT JOIN sys_region s
            ON a.regist_address_province = s.sr_id
        LEFT JOIN sys_region s1
            ON a.regist_address_city = s1.sr_id
        LEFT JOIN sys_region s2
            ON a.regist_address_district = s2.sr_id
        WHERE q.delete = 0
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(name)">
            AND (
            a.responsible LIKE CONCAT ('%',#{name},'%')
            OR a.provider_name LIKE CONCAT ('%',#{name},'%')
            )
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(status)">
            AND a.qualification_status = #{status}
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotNull(startCreateTime)">
            AND q.create_time <![CDATA[>=]]> #{startCreateTime}
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotNull(endCreateTime)">
            AND q.create_time <![CDATA[<=]]> #{endCreateTime}
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotNull(startUpdateTime)">
            AND q.update_time <![CDATA[>=]]> #{startUpdateTime}
        </if>
        <if test="@so.sao.shop.supplier.util.Ognl@isNotNull(endUpdateTime)">
            AND q.update_time <![CDATA[<=]]> #{endUpdateTime}
        </if>
        ORDER BY a.qualification_status,q.create_time
    </select>

</mapper>