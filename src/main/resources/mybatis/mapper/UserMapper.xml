<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="so.sao.shop.supplier.dao.UserDao">
    <resultMap id="BaseResultMap" type="so.sao.shop.supplier.domain.User">
       <!-- <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="money" jdbcType="DECIMAL" property="money"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="is_deleted" jdbcType="TINYINT" property="isDeleted"/>-->
        <id column="user_id" jdbcType="BIGINT" property="id"/>
        <result column="login_name" jdbcType="VARCHAR" property="username"/>
        <result column="login_password" jdbcType="VARCHAR" property="password"/>
        <result column="last_password_reset_date"   property="lastPasswordResetDate"/>
        <result column="logout_time"  property="logoutTime"/>
        <result column="is_admin" jdbcType="CHAR" property="isAdmin"/>
        <result column="account_id"  property="accountId"/>
		<result column="account_status"  property="userStatus"/>
        


    </resultMap>
    <select id="findOne" resultMap="BaseResultMap">
        SELECT user_id, login_name, login_password
          FROM user
         WHERE user_id=#{id}
    </select>
    <select id="countPage"  resultType="int">
        SELECT CASE WHEN count(*)%${page.pageSize}>0 THEN count(*)/${page.pageSize}+1 ELSE count(*)/${page.pageSize} END
          FROM user
    </select>
    <select id="findPage" resultMap="BaseResultMap">
        SELECT user_id, login_name, login_password
          FROM user
    </select> 
    <select id="findByUsername" resultMap="BaseResultMap">
        SELECT 
		  u.user_id,
		  u.login_name,
		  u.login_password,
		  u.last_password_reset_date,
		  u.logout_time,
		  u.is_admin,
		  a.account_status,
		  CASE
		    WHEN a.account_id IS NULL 
		    THEN e.account_id 
		    ELSE a.account_id 
		  END account_id 
		FROM
		  USER u 
		  LEFT JOIN account a 
		    ON u.user_id = a.user_id 
		  LEFT JOIN emp e 
		    ON u.user_id = e.user_id 
		WHERE u.login_name = #{username} 
		  AND (
		    a.account_status = 1
		    OR a.account_status = 2
		    OR e.emp_status = 1
		  )
    </select>
    <update id="updatePassword">
        UPDATE user SET login_password=#{loginPassword}, last_password_reset_date=#{lastPasswordResetDate} WHERE user_id = #{userId}
    </update>
    <update id="saveSmsCode">
        UPDATE user SET sms_code=#{code} WHERE login_name = #{tel}
    </update>
    <select id="findSmsCode" resultType="String">
        SELECT sms_code FROM user WHERE user_id=#{userId}
    </select>
    <insert id="add" parameterType="so.sao.shop.supplier.domain.User">
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into user (login_name, login_password, last_password_reset_date, is_admin)
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{lastPasswordResetDate}, #{isAdmin})
    </insert>
    <update id="update">
        UPDATE user SET login_name=#{tel} WHERE user_id=#{id}
    </update>
    <update id="updateLogoutTime">
        UPDATE user SET logout_time=#{logoutTime} WHERE user_id = #{userId}
    </update>
   	
   	<!-- 根据登录名称查询用户是否存在 -->
   	<select id="findByLoginName" resultMap="BaseResultMap">
   		 SELECT 
		  u.user_id,
		  u.login_name,
		  u.login_password,
		  u.last_password_reset_date,
		  u.logout_time,
		  u.is_admin,
		  CASE
		    WHEN a.account_id IS NULL 
		    THEN e.account_id 
		    ELSE a.account_id 
		  END account_id 
		FROM
		  USER u 
		  LEFT JOIN account a 
		    ON u.user_id = a.user_id 
		  LEFT JOIN emp e 
		    ON u.user_id = e.user_id 
		WHERE u.login_name = #{username}
		  AND (
		    a.account_status = 1
		    OR a.account_status = 2
		    OR e.emp_status = 1
		    OR e.emp_status = 0
		  )
   	</select>
</mapper>