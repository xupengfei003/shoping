<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="so.sao.shop.supplier.dao.SupplierCommodityAuditDao">

    <resultMap id="BaseResultMap" type="so.sao.shop.supplier.domain.SupplierCommodityAudit">
        <id column="ID" property="id"/>
        <result column="SC_ID" property="scId"/>
        <result column="SUPPLIER_ID" property="supplierId"/>
        <result column="UPDATED_AT" property="updatedAt"/>
        <result column="CREATED_AT" property="createdAt"/>
        <result column="STATUS" property="status"/>
        <result column="AUDIT_RESULT" property="auditResult"/>
        <result column="AUDIT_flag" property="auditFlag"/>
        <result column="AUDIT_BY" property="auditBy"/>
        <result column="AUDIT_OPINION" property="auditOpinion"/>
    </resultMap>

    <sql id="audit">
        t.id,
        t.sc_id,
        t.supplier_id,
        t.status,
        t.audit_result,
        t.created_at,
        t.updated_at ,
        t.audit_by ,
        t.audit_flag ,
        t.audit_opinion
    </sql>

    <!--新增供应商商品审核记录-->
    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO supplier_commodity_audit
        (
        sc_id,
        supplier_id,
        updated_at,
        created_at,
        status,
        audit_result,
        audit_flag
        )
        VALUES
        (
        #{scId},
        #{supplierId},
        #{updatedAt},
        #{createdAt},
        #{status},
        #{auditResult},
        #{auditFlag}
        )
    </insert>

    <!--批量新增供应商商品审核记录-->
    <insert id="saveBatch" parameterType="java.util.List">
        insert into supplier_commodity_audit
        (
        sc_id,
        supplier_id,
        created_at,
        updated_at,
        status,
        audit_result,
        audit_flag
        )
        values
        <foreach collection="list" item="item" open="" close="" separator=",">
          (
            #{item.scId},
            #{item.supplierId},
            #{item.createdAt},
            #{item.updatedAt},
            #{item.status},
            #{item.auditResult},
            #{item.auditFlag}
          )
        </foreach>
    </insert>

    <!--根据scId和audit_result判断该供应商商品是否已处于待审核状态-->
    <select id="countByScidAndAuditResult" resultType="int">
        select
        count(id) as num
        from supplier_commodity_audit where audit_result = 2 AND sc_id = #{1}
    </select>

    <!--根据scId数组和audit_result判断该供应商商品数组中是否有已处于待审核状态的商品-->
    <select id="countByScidArrayAndAuditResult" resultType="int">
        select
        count(id) as num
        from supplier_commodity_audit
        where audit_result = 2
        AND sc_id IN
        <foreach collection="ids" open="(" close=")" separator="," item="sc_id">
          #{sc_id}
        </foreach>
    </select>

    <!--根据scId更新当前操作标记-->
    <update id="updateAuditFlagByScId">
        UPDATE
        supplier_commodity_audit
        SET
        audit_flag = #{auditFlag}
        WHERE
        sc_id = #{scId}
    </update>

    <!--根据scId更新当前操作标记-->
    <update id="updateAuditFlagByList" parameterType="java.util.List">
        UPDATE
        supplier_commodity_audit
        SET
        audit_flag = #{auditFlag}
        WHERE
        sc_id IN
        <foreach collection="list" open="(" close=")" separator="," item="item">
            #{item.scId}
        </foreach>
    </update>

    <!--获取审核商品详情-->
    <select id="findSupplierCommodityAuditById" resultType="so.sao.shop.supplier.domain.SupplierCommodityAudit">
        SELECT
        id,
        sc_id AS scId,
        supplier_id AS supplierId,
        updated_at AS updatedAt,
        created_at AS createdAt,
        status,
        audit_result AS auditResult,
        audit_flag AS auditFlag,
        audit_by AS auditBy,
        audit_opinion  AS auditOpinion
        FROM supplier_commodity_audit sca
        WHERE  sca.id = #{id}
    </select>

    <!--更新审核表-->
    <update id="updateSupplierCommodityAuditById"  parameterType="so.sao.shop.supplier.domain.SupplierCommodityAudit">
        UPDATE supplier_commodity_audit
        SET
        audit_result = #{auditResult},
        audit_flag = #{auditFlag},
        audit_by = #{auditBy},
        audit_opinion = #{auditOpinion},
        status = #{status},
        updated_at = #{updatedAt},
        audit_by = #{auditBy}
        WHERE id = #{id}
    </update>

    <!-- 查询所有审核数据 -->
    <select id="findCommodityAudit" resultType="so.sao.shop.supplier.pojo.vo.CommodityAuditinputVo">
        SELECT
        t2.id AS id,
        t2.scId AS scId,
        t2.supplierId AS supplierId,
        t2.supplierName AS supplierName,
        t2.minImg AS minImg,
        t2.code69 AS code69,
        t2.code AS code,
        t2.brandName AS brandName,
        t2.name AS name,
        t2.unitName AS unitName,
        t2.ruleVal AS ruleVal,
        t2.inventory AS inventory,
        t2.price AS price,
        t2.unitPrice AS unitPrice,
        t2.createdAt AS createdAt,
        t2.updatedAt AS updatedAt,
        t2.minOrderQuantity AS minOrderQuantity,
        t2.auditResult AS auditResult,
        t2.auditOpinion AS auditOpinion,
        t2.status AS status
        FROM (
        SELECT
        t1.id AS id,
        sc.id AS scId,
        t1.supplier_id AS supplierId,
        a.provider_name AS supplierName,
        sc.min_img AS minImg,
        c.code69 AS code69,
        sc.code AS code,
        cb.name AS brandName,
        c.name AS name,
        cu.name AS unitName,
        sc.rule_val AS ruleVal,
        sc.inventory AS inventory,
        sc.price AS price,
        sc.unit_price AS unitPrice,
        t1.created_at AS createdAt,
        t1.updated_at AS updatedAt,
        sc.min_order_quantity AS minOrderQuantity,
        t1.audit_result AS auditResult,
        t1.audit_opinion AS auditOpinion,
        t1.status AS status
        FROM `supplier_commodity` sc
        RIGHT JOIN `supplier_commodity_audit` t1 ON sc.`id` = t1.sc_id
        INNER JOIN account a ON t1.supplier_id=a.account_id
        INNER JOIN commodity c ON sc.code69 = c.code69
        LEFT JOIN supplier_commodity_tmp sctmp ON sctmp.sca_id = t1.id
        LEFT JOIN comm_unit cu ON sc.unit_id = cu.id
        LEFT JOIN comm_brand cb ON c.brand_id = cb.id
        WHERE sc.`deleted` = 0 AND sctmp.id IS NULL
        UNION
        SELECT
        t1.id AS id,
        t1.sc_id AS scId,
        t1.supplier_id AS supplierId,
        a.provider_name AS supplierName,
        sctmp.min_img AS minImg,
        sctmp.code69 AS code69,
        sctmp.code AS code,
        cb.name AS brandName,
        c.name AS name,
        cu.name AS unitName,
        sctmp.rule_val AS ruleVal,
        sc.inventory AS inventory,
        sctmp.price AS price,
        sctmp.unit_price AS unitPrice,
        t1.created_at AS createdAt,
        t1.updated_at AS updatedAt,
        sctmp.min_order_quantity AS minOrderQuantity,
        t1.audit_result AS auditResult,
        t1.audit_opinion AS auditOpinion,
        t1.status AS status
        FROM `supplier_commodity_tmp` sctmp
        RIGHT JOIN `supplier_commodity_audit` t1 ON sctmp.`sca_id` = t1.id
        INNER JOIN account a ON t1.supplier_id=a.account_id
        INNER JOIN commodity c ON sctmp.code69 = c.code69
        LEFT JOIN supplier_commodity sc on sc.`id` = t1.sc_id
        LEFT JOIN comm_unit cu ON sctmp.unit_id = cu.id
        LEFT JOIN comm_brand cb ON c.brand_id = cb.id
        ) t2
        <where>
            <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(status)">
                AND t2.status = #{status}
            </if>
            <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(auditResult)">
                AND t2.auditResult = #{auditResult}
            </if>
            <if test="@so.sao.shop.supplier.util.Ognl@isNotEmpty(inputvalue)">
                AND (code69 = #{inputvalue}
                OR name LIKE "%${inputvalue}%" OR supplierName LIKE "%${inputvalue}%" )
            </if>

        </where>
        ORDER BY
        <if test="sortStatus==0">
            t2.createdAt ASC
        </if>
        <if test="sortStatus==1">
            t2.createdAt  DESC
        </if>


    </select>

    <!-- 查询审核记录详情 -->
    <select id="findAuditDetail" resultType="so.sao.shop.supplier.pojo.output.CommodityOutput">
        SELECT
	        sca.sc_id AS id,
            sca.id AS scaId,
            sca.supplier_id AS supplierId,
            cb.name AS brandName,
            c.category_one_id AS categoryOneId,
            c.category_two_id AS categoryTwoId,
            c.category_three_id AS categoryThreeId,
            c.name AS NAME,
            sc.remark AS remark,
            sc.description AS description,
            sc.code AS CODE,
            sc.code69 AS code69,
            c.origin_place AS originPlace,
            c.company_name AS companyName,
            sc.production_date AS productionDate,
            sc.guarantee_period AS guaranteePeriod,
            sc.guarantee_period_unit AS guaranteePeriodUnit,
            sc.carton_id AS cartonId,
            cn.name AS cartonName,
            sc.carton_val AS cartonVal,
            sc.measure_spec_val AS measureSpecVal,
            sc.inventory_status AS inventoryStatus,
            sc.inventory_minimum As inventoryMinimum,
            sc.tag_id AS tagId,
            ct.name AS tagName,
            sc.measure_spec_id AS measureSpecId,
            cms.name AS measureSpecName,
            sc.rule_val AS ruleVal,
            sc.unit_id AS unitId,
            cu.name AS unitName,
            sc.inventory AS inventory,
            sc.min_img AS minImg,
            sc.price AS price,
            sc.unit_price AS unitPrice,
            sca.created_at AS createdAt,
            sca.updated_at AS updatedAt,
            sca.status AS STATUS,
            sc.invalid_status AS invalidStatus,
            sc.min_order_quantity AS minOrderQuantity,
            (SELECT NAME FROM comm_category cc WHERE cc.id = c.category_one_id) AS categoryOneName,
            (SELECT NAME FROM comm_category cc WHERE cc.id = c.category_two_id) AS categoryTwoName,
            (SELECT NAME FROM comm_category cc WHERE cc.id = c.category_three_id) AS categoryThreeName
        FROM
             supplier_commodity sc
            INNER JOIN (commodity c LEFT JOIN comm_brand cb ON c.brand_id = cb.id) ON sc.code69 = c.code69
             LEFT JOIN comm_measure_spec cms ON sc.measure_spec_id = cms.id
             LEFT JOIN comm_unit cu ON sc.unit_id = cu.id
             LEFT JOIN comm_tag ct ON sc.tag_id = ct.id
             LEFT JOIN comm_carton cn ON sc.carton_id = cn.id
             RIGHT JOIN supplier_commodity_audit sca ON sc.id = sca.sc_id
             WHERE sca.id = #{id}
    </select>
</mapper>
